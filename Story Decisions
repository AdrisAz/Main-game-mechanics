import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;

public class Game {
	
	JFrame window;
	Container con;
	JPanel titleNamePanel, startButtonPanel, mainTextPanel, choiceButtonPanel, playerPanel, imagePanel, hpPanel, weaponPanel;
	JLabel titleNameLabel, hpLabel, hpLabelNumber, weaponLabel, weaponLabelName, imageLabel;
	Font titleFont = new Font("Times New Roman", Font.BOLD, 73);
	Font normalFont = new Font("Times New Roman", Font.BOLD, 25);
	Font choiceFont = new Font("Times New Roman", Font.BOLD, 22);
	JButton startButton, choice1, choice2, choice3, choice4;
	int playerHP, zombieHP;
	String weapon, position;
	ImageIcon image;
	JTextArea mainTextArea;
	
	TitleScreenHandler tsHandler = new TitleScreenHandler();
	ChoiceHandler choiceHandler = new ChoiceHandler();

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
			new Game();
	}
	
	public Game(){
		
		window = new JFrame();//Panel initialization 
		window.setSize(1280,720);//Size of window
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//Able to close program
		window.getContentPane().setBackground(Color.black);//Colour of window
		window.setLayout(null);//Disable default layout for game
		window.setVisible(true);//To see the window
		con = window.getContentPane();//Base layer
		
		titleNamePanel = new JPanel();//Panel initialization 
		titleNamePanel.setBounds(330, 100, 650, 150);//Size and location of panel
		titleNamePanel.setBackground(Color.black);//Colour of panel
		titleNameLabel = new JLabel("Zombie Apocalypse");//Text for title to be placed on panel
		titleNameLabel.setForeground(Color.white);//Colour of Text
		titleNameLabel.setFont(titleFont);//Apply font to text
		
		startButtonPanel = new JPanel();//Initialization of button frame
		startButtonPanel.setBounds(530, 400, 200, 100);//Size and location of button frame
		startButtonPanel.setBackground(Color.black);//Colour of button frame
		startButton = new JButton("Begin Game");//Button initialization 
		startButton.setBackground(Color.black);//Colour of button background
		startButton.setForeground(Color.white);//Colour of text on top of button
		startButton.setFont(normalFont);//Apply font to button text
		startButton.addActionListener(tsHandler);//Forwards to "TitleScreenHandler" ActionListener when button is clicked
		startButton.setFocusPainted(false);//Disable button focus
		//Alternate way to remove focus: "startButton.setFocusable(false);"
		
		titleNamePanel.add(titleNameLabel);//Place text on Panel
		startButtonPanel.add(startButton);//Place button on panel
		
		con.add(titleNamePanel);//Add panel to container, (Text panel Layer)
		con.add(startButtonPanel);//Add panel to container, (Button layer)
		window.setVisible(true);//To see the window
	}
	
	public void createGameScreen(){
		
		titleNamePanel.setVisible(false);//Disables this panel when createGameScreen is called
		startButtonPanel.setVisible(false);//Disables this panel when createGameScreen is called
		mainTextPanel = new JPanel();//Text panel initialization 
		mainTextPanel.setBounds(80, 100, 1150, 250);//Size and location of panel
		mainTextPanel.setBackground(Color.black);//Colour of panel
		mainTextPanel.setOpaque(false);//Set panel to transparent
		con.add(mainTextPanel);//Add panel to container, (Text panel Layer)
		
		mainTextArea = new JTextArea();//Initializes placement for text
		mainTextArea.setBounds(100, 100, 1150, 250);//Size and location of area
		mainTextArea.setOpaque(false);//Set panel to transparent
		mainTextArea.setForeground(Color.white);//Colour of text in area
		mainTextArea.setFont(normalFont);//Apply font to text
		mainTextArea.setLineWrap(true);//Apply a text wrap function
		mainTextArea.setWrapStyleWord(true);//Apply a specific (word) text wrap function
		mainTextPanel.add(mainTextArea);//Add text area to Text panel, (Text area layer)
		
		choiceButtonPanel = new JPanel();//Initialization of button frame
		choiceButtonPanel.setBounds(210, 350, 800, 250);//Size and location of panel
		choiceButtonPanel.setOpaque(false);//Set panel to transparent
		choiceButtonPanel.setLayout(new GridLayout(4,1));//Formats buttons to four individual rows
		con.add(choiceButtonPanel);//Add panel to container, (Button layer)
		
		choice1 = new JButton("Choice 1");//Button initialization
		choice1.setOpaque(false);//Set button to transparent
		choice1.setForeground(Color.black);//Colour of text on top of button
		choice1.setFont(normalFont);//Apply font to text on button
		choice1.setFocusPainted(false);//Disable button focus
		choice1.addActionListener(choiceHandler);//Forwards to "ChoiceHandler" ActionListener when button is clicked
		choice1.setActionCommand("c1");//Identifies to program which specific choice this button correlates to
		choiceButtonPanel.add(choice1);//Add Button on panel
		
		choice2 = new JButton("Choice 2");//Button initialization
		choice2.setOpaque(false);//Set button to transparent
		choice2.setForeground(Color.black);//Colour of text on top of button
		choice2.setFont(normalFont);//Apply font to text on button
		choice2.setFocusPainted(false);//Disable button focus
		choice2.addActionListener(choiceHandler);//Forwards to "ChoiceHandler" ActionListener when button is clicked
		choice2.setActionCommand("c2");//Identifies to program which specific choice this button correlates to
		choiceButtonPanel.add(choice2);//Add Button on panel
		
		choice3 = new JButton("Choice 3");//Button initialization
		choice3.setOpaque(false);//Set button to transparent
		choice3.setForeground(Color.black);//Colour of text on top of button
		choice3.setFont(normalFont);//Apply font to text on button
		choice3.setFocusPainted(false);//Disable button focus
		choice3.addActionListener(choiceHandler);//Forwards to "ChoiceHandler" ActionListener when button is clicked
		choice3.setActionCommand("c3");//Identifies to program which specific choice this button correlates to
		choiceButtonPanel.add(choice3);//Add Button on panel
		
		choice4 = new JButton("Choice 4");//Button initialization
		choice4.setOpaque(false);//Set button to transparent
		choice4.setForeground(Color.black);//Colour of text on top of button
		choice4.setFont(normalFont);//Apply font to text on button
		choice4.setFocusPainted(false);//Disable button focus
		choice4.addActionListener(choiceHandler);//Forwards to "ChoiceHandler" ActionListener when button is clicked
		choice4.setActionCommand("c4");//Identifies to program which specific choice this button correlates to
		choiceButtonPanel.add(choice4);//Add Button on panel
		
		hpPanel = new JPanel();
		hpPanel.setBounds(300, 20, 800, 50);//Size and location of panel
		hpPanel.setOpaque(false);//Set panel to transparent
		hpPanel.setBackground(Color.black);//Colour of panel
		hpPanel.setLayout(new GridLayout(1,4));//Layout of panel to four columns
		con.add(hpPanel);//Add panel to container
		
		weaponPanel = new JPanel();
		weaponPanel.setBounds(640, 20, 800, 50);//Size and location of panel
		weaponPanel.setOpaque(false);//Set panel to transparent
		weaponPanel.setBackground(Color.black);//Colour of panel
		weaponPanel.setLayout(new GridLayout(1,4));//Layout of panel to four columns
		con.add(weaponPanel);//Add panel to container
		
		playerPanel = new JPanel();//Panel initialization to hold player information
		playerPanel.setBounds(370, 20, 800, 50);//Size and location of panel
		playerPanel.setOpaque(false);//Set panel to transparent
		playerPanel.setBackground(Color.black);//Colour of panel
		playerPanel.setLayout(new GridLayout(1,4));//Layout of panel to four columns
		con.add(playerPanel);//Add panel to container
		
		hpLabel = new JLabel("HP:");//Text for HP label to be placed
		hpLabel.setFont(normalFont);//Font selection
		hpLabel.setForeground(Color.white);//Font colour
		hpPanel.add(hpLabel);//Add HP text to  panel
		
		hpLabelNumber = new JLabel();//Text for HP value to be placed
		hpLabelNumber.setFont(normalFont);//Font selection
		hpLabelNumber.setForeground(Color.white);//Font colour
		playerPanel.add(hpLabelNumber);//Add label to panel
		
		weaponLabel = new JLabel("Weapon:");//Text for weapon label to be placed
		weaponLabel.setFont(normalFont);//Font selection
		weaponLabel.setForeground(Color.white);//Font colour
		weaponPanel.add(weaponLabel);//Add label to panel
		
		weaponLabelName = new JLabel();//Text for weapon name to be placed
		weaponLabelName.setFont(normalFont);//Font selection
		weaponLabelName.setForeground(Color.white);//Font colour
		playerPanel.add(weaponLabelName);//Add label to panel
		
		imagePanel = new JPanel();
		imagePanel.setBounds(1, 1, 1280, 720);
		imagePanel.setBackground(Color.white);
		
		imageLabel = new JLabel();
		
		image = new ImageIcon(".//res//dforest.jpg");
		
		imageLabel.setIcon(image);
		imagePanel.add(imageLabel);
		
		con.add(imagePanel);
		
		playerSetup();//Directs program to playerSetup method
		
	}
	public void playerSetup(){//Initializes the playerSetup method
		playerHP = 100;//Set initial player's HP
		zombieHP = 100;//Set initial enemy's HP
		weapon = "Machete";//Set initial player's weapon
		weaponLabelName.setText(weapon);//Display weapon text on label
		hpLabelNumber.setText("" + playerHP);//Display integer HP value
		
		
		mainScreen();//Directs to main method
	}
	public void mainScreen()
	{//Initializes the playerSetup method
		playerPanel.validate();//Refreshes the panel
		playerPanel.repaint();//Tells program that panel needs refreshing
		choice2.setVisible(false);//Sets the buttons to invisible
		choice3.setVisible(false);//Sets the buttons to invisible
		choice4.setVisible(false);//Sets the buttons to invisible
		position = "mainScreen";//Indication of which method is currently running
		mainTextArea.setText("You are on a truck going to your best friend, Marty B’s,"
				+ "house  when you look out your driver's window to see something weird. "
				+ "You stop your truck to go out and see what it is and you notice that it is a humanoid figure in the woods."
				+ "You go to see if he is alright when you notice a foul smell and then see his literal dead stare looking right into your eyes, "
				+ "you see that he has a large piece of his shoulder bitten off with a disgusting amount of exposed skin. "
				+ "You ask him what happened but he only answers with a moan.You continue to stare back at the figure, then out of nowhere he attacks. ");//Placement for text
		choice1.setText("Continue");//Display text on button
		choice2.setText("");//Display text on button
		choice3.setText("");//Display text on button
		choice4.setText("");//Display text on button
	}
	public void mainScreencont()
	{//Initializes the playerSetup method
		playerPanel.validate();//Refreshes the panel
		playerPanel.repaint();//Tells program that panel needs refreshing
		choice2.setVisible(true);//Sets the buttons to invisible
		choice3.setVisible(true);//Sets the buttons to invisible
		choice4.setVisible(true);//Sets the buttons to invisible
		position = "mainScreencont";//Indication of which method is currently running
		mainTextArea.setText(" He starts running at you with that same dead stare locked onto you as his mouth is wide open."
				+ " You run as fast as you can back to your truck, lock the door and speed away with no hesitation."
				+ " When you are in the truck you keep asking yourself what that guy was doing,"
				+ " then you realize that even though you never thought the day would come,"
				+ " you realize that the world has gone into a ZOMBIE APOCALYPSE."
				+ " You keep driving to Marty B’s house that is just 10 minutes away and you see that the road is blocked by hundreds of humanoid figures"
				+ " similarly to the one that tried to eat you earlier."
				+ " You step on the brakes before getting any closer and…..You have to make a choice now, do you:");//Placement for text
		choice1.setText("Try to drive through the zombies");//Display text on button
		choice2.setText("Turn your truck around and try to find a different route");//Display text on button
		choice3.setText("Get out of your car and try to make it on foot by walking around the big mob");//Display text on button
		choice3.setFont(choiceFont);
		choice4.setText(" Try to fight through the zombies ");//Display text on button 
	}
		public void drivetru()
		{//Initializes the playerSetup method
			playerPanel.validate();//Refreshes the panel
			playerPanel.repaint();//Tells program that panel needs refreshing
			choice2.setVisible(true);//Sets the buttons to invisible
			choice3.setVisible(true);//Sets the buttons to invisible
			choice4.setVisible(true);//Sets the buttons to invisible
			position = "drivetru";//Indication of which method is currently running
			mainTextArea.setText("You stomp on the gas peddle as hard as you can and try to bust through the zombies."
					+ " You manage to get out the other end but they end up ripping out the exhaust pipe and part of the  hood."
					+ " Do you:");//Placement for text
			choice1.setText("Keep on driving for as long as you can ");//Display text on button
			choice2.setText("Hold up in your truck hoping someone comes that can rescue you ");//Display text on button
			choice3.setText("Leave your truck and walk on foot");//Display text on button
			choice3.setFont(choiceFont);
			choice4.setText("Try and find parts for your truck");//Display text on button 
		}
			public void drivecont()
			{//Initializes the playerSetup method
				playerPanel.validate();//Refreshes the panel
				playerPanel.repaint();//Tells program that panel needs refreshing
				choice2.setVisible(true);//Sets the buttons to invisible
				choice3.setVisible(true);//Sets the buttons to invisible
				choice4.setVisible(true);//Sets the buttons to invisible
				position = "drivecont";//Indication of which method is currently running
				mainTextArea.setText("You keep driving for as long as you can towards Marty's house."
						+ " As you are driving you notice that your gas tank is also leaking so you stomp on the gas so you can use as much gas as you can well it is in your tank."
						+ " As you hit the gas the dangling exhaust pipe starts to spark and catches the dripping gas on fire."
						+ " The flames are starting to cover the car and before you can do anything the car blows up. YOU DIE"
						+ "Do you want to play again?");//Placement for text
				choice1.setText("Yes");//Display text on button
				choice2.setText("No");//Display text on button
				choice3.setText("");//Display text on button
				choice3.setFont(choiceFont);
				choice4.setText("");//Display text on button 
			}
			public void holdup()
			{//Initializes the playerSetup method
				playerPanel.validate();//Refreshes the panel
				playerPanel.repaint();//Tells program that panel needs refreshing
				choice2.setVisible(true);//Sets the buttons to invisible
				choice3.setVisible(true);//Sets the buttons to invisible
				choice4.setVisible(true);//Sets the buttons to invisible
				position = "holdup";//Indication of which method is currently running
				mainTextArea.setText("You decide to lock your doors and you figure out that you have enough food and water for only 2 days."
						+ " 2 days pass and you stay in one spot but the only thing that is coming towards you is zombies and not help. "
						+ " As you hit the gas the dangling exhaust pipe starts to spark and catches the dripping gas on fire."
						+ " You have ran out of food and water but at this point you are completely surrounded by zombies and you realize you no matter what you do you won't make it out. YOU DIE"
						+ " Do you want to play again?");//Placement for text
				choice1.setText("Yes");//Display text on button
				choice2.setText("No");//Display text on button
				choice3.setText("");//Display text on button
				choice3.setFont(choiceFont);
				choice4.setText("");//Display text on button 
			}
			public void walk()
			{//Initializes the playerSetup method
				playerPanel.validate();//Refreshes the panel
				playerPanel.repaint();//Tells program that panel needs refreshing
				choice2.setVisible(true);//Sets the buttons to invisible
				choice3.setVisible(true);//Sets the buttons to invisible
				choice4.setVisible(true);//Sets the buttons to invisible
				position = "walk";//Indication of which method is currently running
				mainTextArea.setText("You leave your truck and follow the road away from the zombies."
						+ " You walk for an hour before you can see the town your friend lives in."
						+ " As you look at the town you can’t see anyone anywhere in the town. Do you:");//Placement for text
				choice1.setText("Keep walking and pass the town you friend lives in");//Display text on button
				choice2.setText("Walk into the town and look for your friend");//Display text on button
				choice3.setText("");//Display text on button
				choice3.setFont(choiceFont);
				choice4.setText("");//Display text on button 
			}
				public void walkcont()
				{//Initializes the playerSetup method
					playerPanel.validate();//Refreshes the panel
					playerPanel.repaint();//Tells program that panel needs refreshing
					choice2.setVisible(true);//Sets the buttons to invisible
					choice3.setVisible(true);//Sets the buttons to invisible
					choice4.setVisible(true);//Sets the buttons to invisible
					position = "walkcont";//Indication of which method is currently running
					mainTextArea.setText("You walk past the town to search for your friends Marty B."
							+ " As you are walking you notice that there is a zombie on the road in front out you."
							+ " As you get closer to the zombie you notice that it is your best friend Marty B."
							+ " He notices you and starts to come towards you and you have to make a choice. Do you:");//Placement for text
					choice1.setText("Kill your friend because he has turned into a zombie.");//Display text on button
					choice2.setText("Run away from him but leave him be.");//Display text on button
					choice3.setText("");//Display text on button
					choice3.setFont(choiceFont);
					choice4.setText("");//Display text on button 
				}
					public void attack()
					{//Initializes the playerSetup method
						playerPanel.validate();//Refreshes the panel
						playerPanel.repaint();//Tells program that panel needs refreshing
						choice2.setVisible(true);//Sets the buttons to invisible
						choice3.setVisible(true);//Sets the buttons to invisible
						choice4.setVisible(true);//Sets the buttons to invisible
						position = "attack";//Indication of which method is currently running
						mainTextArea.setText("As you are approaching Marty you pull out your (Insert Weapon) And go to hit him."
								+ " With one fast strike to the head you kill him making him fall to the ground. "
								+ " You leave your friend on the ground and walk away. "
								+ " As you are walking you realize that you have no one left and you are all alone."
								+ " You keep walking down the road till you reach a town."
								+ " You are very hungry and tired from walking all day you do into the town and look down the streets to see a pack of 5 zombies Do you:");//Placement for text
						choice1.setText("");//Display text on button
						choice2.setText("");//Display text on button
						choice3.setText("");//Display text on button
						choice3.setFont(choiceFont);
						choice4.setText("");//Display text on button 
					}
					public void leave()
					{//Initializes the playerSetup method
						playerPanel.validate();//Refreshes the panel
						playerPanel.repaint();//Tells program that panel needs refreshing
						choice2.setVisible(true);//Sets the buttons to invisible
						choice3.setVisible(true);//Sets the buttons to invisible
						choice4.setVisible(true);//Sets the buttons to invisible
						position = "leave";//Indication of which method is currently running
						mainTextArea.setText(""
								+ ""
								+ ""
								+ ""
								+ ""
								+ "");//Placement for text
						choice1.setText("");//Display text on button
						choice2.setText("");//Display text on button
						choice3.setText("");//Display text on button
						choice3.setFont(choiceFont);
						choice4.setText("");//Display text on button 
					}

			
	public class TitleScreenHandler implements ActionListener{//Interface for receiving an action event (Button press)
		
		public void actionPerformed(ActionEvent event){//Indicates that an action has occurred
			
			createGameScreen();//This is called after action has been detected
	  }
   }
	public class ChoiceHandler implements ActionListener{//Interface for receiving an action event (Button press)
		
		public void actionPerformed(ActionEvent event){//Indicates that an action has occurred
			
			String yourChoice = event.getActionCommand();//Recognizes which choice button is clicked
			
			switch(position){//Determines which method is being processed
			case "mainScreen"://Indicates which method is being processed
				switch(yourChoice){//Determines which choice button was clicked
				case "c1": mainScreencont(); break;//Result of choice 1 button click
				} 
				break;
			case "mainScreencont"://Indicates which method is being processed
				switch(yourChoice){//Determines which choice button was clicked
				case "c1":  drivetru(); break;//Result of choice 1 button click
				case "c2":  diffroute();break;//Result of choice 2 button click
				case "c3":  mobwalk();break;//Result of choice 3 button click
				case "c4":  fight();break;//Result of choice 4 button click
				} 
				break;
				case "drivetru"://Indicates which method is being processed
					switch(yourChoice){//Determines which choice button was clicked
					case "c1": drivecont(); break;//Result of choice 1 button click
					case "c2": holdup();break;//Result of choice 2 button click
					case "c3":  walk();break;//Result of choice 3 button click
					case "c4":  parts();break;//Result of choice 4 button click
					} 
					break;
					case "drivecont"://Indicates which method is being processed
						switch(yourChoice){//Determines which choice button was clicked
						case "c1": return;//Result of choice 1 button click
						case "c2": System.exit(0);break;//Result of choice 2 button click
						} 
						break;
					case "holdup"://Indicates which method is being processed
						switch(yourChoice){//Determines which choice button was clicked
						case "c1": return;//Result of choice 1 button click
						case "c2":  System.exit(0);break;//Result of choice 2 button click
						}
						break;
					case "walk"://Indicates which method is being processed
						switch(yourChoice){//Determines which choice button was clicked
						case "c1": walkcont(); break;//Result of choice 1 button click
						case "c2":  holdup();break;//Result of choice 2 button click
						}
						break;
						case "walkcont"://Indicates which method is being processed
							switch(yourChoice){//Determines which choice button was clicked
							case "c1": attack(); break;//Result of choice 1 button click
							case "c2":  leave();break;//Result of choice 2 button click
							}
							break;
			
				}
			}
		}
	}
